version: '3'

services:
  # web:
  #   build: ./app
  #   restart: always
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./app:/app
  #     - static_volume:/app/static
  #   environment:
  #     FLASK_APP: app.py
  #     FLASK_ENV: development
  #     POSTGRES_USER: lifesabeach
  #     POSTGRES_PASSWORD: lifesabeach
  #     POSTGRES_DB: lifesabeach
  #     DATABASE_URL: postgresql://lifesabeach:lifesabeach@db/lifesabeach

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: lifesabeach
      POSTGRES_PASSWORD: lifesabeach
      POSTGRES_DB: lifesabeachvietnam
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
    networks:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # nginx:
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - /certbot/letsencrypt:/etc/letsencrypt
  #     - static_volume:/app/static
  #   depends_on:
  #     - web

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - /nginx/conf:/etc/nginx/conf.d   # Mount Nginx configuration directory
  #     - /certbot/letsencrypt:/etc/letsencrypt   # Mount Let's Encrypt certificates directory
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   depends_on:
  #     - nginx   # Ensure Nginx container is started before Certbot

volumes:
  db_volume:
  static_volume:
  pgadmin-data:

networks:
  postgres:
    driver: bridge